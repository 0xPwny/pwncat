.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.11.
.TH PWNCAT: "1" "April 2020" "pwncat: Version 0.0.5-alpha (https://github.com/cytopia/pwncat) by cytopia" "User Commands"
.SH NAME
pwncat: \- pwncat
.SH DESCRIPTION
usage: pwncat [\-Cnuv] [\-e cmd] hostname port
.IP
pwncat [\-Cnuv] [\-e cmd] \fB\-l\fR [hostname] port
pwncat [\-Cnuv] \fB\-z\fR hostname port
pwncat [\-Cnuv] \fB\-L\fR addr:port [hostname] port
pwncat [\-Cnuv] \fB\-R\fR addr:port hostname port
pwncat \fB\-V\fR, \fB\-\-version\fR
pwncat \fB\-h\fR, \fB\-\-help\fR
.PP
Enhanced and comptaible Netcat implementation written in Python (2 and 3) with
connect, zero\-i/o, listen and forward modes and techniques to detect and evade
firewalls and intrusion prevention systems.
.SS "positional arguments:"
.TP
hostname
Address to listen, forward or connect to
.TP
port
Port to listen, forward or connect to
.SS "mode arguments:"
.TP
\fB\-l\fR, \fB\-\-listen\fR
[Listen mode]:
Start server and listen for incoming connections.
.TP
\fB\-z\fR, \fB\-\-zero\fR
[Zero\-I/0 mode]:
Connect to a remote endpoint and report status only.
.TP
\fB\-L\fR addr:port, \fB\-\-local\fR addr:port
[Local forward mode]:
Specify local <addr>:<port> to which traffic should be
forwarded to. pwncat will listen locally
(specified by hostname and port) and forward all
traffic to the specified value for \fB\-L\fR/\-\-local.
.TP
\fB\-R\fR addr:port, \fB\-\-remote\fR addr:port
[Remote forward mode]:
Specify local <addr>:<port> from which traffic should be
forwarded from. pwncat will connect remotely
(specified by hostname and port) and for ward all
traffic from the specified value for \fB\-R\fR/\-\-remote.
.SS "optional arguments:"
.TP
\fB\-e\fR cmd, \fB\-\-exec\fR cmd
Execute shell command. Only for connect or listen mode.
.TP
\fB\-C\fR, \fB\-\-crlf\fR
Send CRLF line\-endings in connect mode (default: LF)
.TP
\fB\-n\fR, \fB\-\-nodns\fR
Do not resolve DNS.
.TP
\fB\-u\fR, \fB\-\-udp\fR
UDP mode
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Be verbose and print info to stderr. Use \fB\-v\fR, \fB\-vv\fR, \fB\-vvv\fR
or \fB\-vvvv\fR for more verbosity. The server performance will
decrease drastically if you use more than three \fB\-v\fR.
.SS "advanced arguments:"
.TP
\fB\-\-reinit\fR x
Listen mode (TCP only):
If the server is unable to bind or accept clients, it
will re\-initialize itself x many times before giving up.
Use 0 to re\-initialize endlessly. (default: don't).
.TP
Connect mode (TCP only):
If the client is unable to connect to a remote endpoint,
it will try again x many times before giving up.
Use 0 to retry endlessly. (default: don't)
.TP
Zero\-I/O mode (TCP only):
Same as connect mode.
.TP
\fB\-\-reconn\fR x
Listen mode (TCP only):
If the client has hung up, the server will re\-accept a
new client x many times before quitting. Use 0 to accept
endlessly. (default: quit after a client has hung up)
.TP
Connect mode (TCP only):
If the remote server is gone, the client will re\-connect
to it x many times before giving up. Use 0 to reconnect
endlessy. (default: don't)
This might be handy for reverse shells ;\-)
.TP
\fB\-\-reinit\-robin\fR port
Connect mode (TCP only):
If the client does multiple initial connections to a
remote endpoint (via \fB\-\-reinit\fR), this option instructs it
to also "round\-robin" different ports to connect to. It
will stop iterating after first successfull connection
and stick with it or quit if \fB\-\-reinit\fR limit is reached.
Use comma separated string: 80,81,82 or a range 80\-100.
Set \fB\-\-reinit\fR to at least the number of ports to probe +1
Set \fB\-\-reinit\-wait\fR to 0
This helps to evade EGRESS firewalls for reverse shells
Use with \fB\-z\fR/\-\-zero to probe outbound allowed ports.
Ensure to have enough listeners at the remote endpoint.
.TP
\fB\-\-reconn\-robin\fR port
Connect mode (TCP only):
If the remote endpoint is gone after initial successful
connection, and the the client is set to reconnect with
(\fB\-\-reconn\fR), it will connect back by "round\-robin" to
different ports. It will stop after \fB\-\-reconn\fR limit has
reached.
Set \fB\-\-reconn\fR to at least the number of ports to probe +1
Set \fB\-\-reconn\-wait\fR to 0
This help your reverse shell to evade intrusion
prevention systems that will cut your connection and
block the outbound port.
.TP
\fB\-\-reinit\-wait\fR s
Wait x seconds between re\-inits. (default: 1)
.TP
\fB\-\-reconn\-wait\fR s
Wait x seconds between re\-connects. (default: 1)
.TP
\fB\-\-udp\-ping\-intvl\fR s
Connect mode (UDP only):
As UDP is stateless, a client must first connect to a
server before the server can communicate with it.
If you listen on UDP and wait for a reverse UDP client
or reverse UDP shell, you can only talk to it after it
has sent you some initial data, as UDP does not have a
"connect" state like TCP.
This option instructs the UDP client to send a single
newline every s seconds. By not only doing it once,
but in intervals, you can also maintain a connection
if you restart your listening server.
.SS "misc arguments:"
.TP
\fB\-h\fR, \fB\-\-help\fR
Show this help message and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Show version information and exit
.SH "SEE ALSO"
The full documentation for
.B pwncat:
is maintained as a Texinfo manual.  If the
.B info
and
.B pwncat:
programs are properly installed at your site, the command
.IP
.B info pwncat:
.PP
should give you access to the complete manual.
